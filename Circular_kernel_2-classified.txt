

# Geometric Concepts #

`CircularKernel`

## Functors ##

`CircularKernel::ConstructLine_2`

`CircularKernel::ConstructCircle_2`

`CircularKernel::ConstructCircularArcPoint_2`

`CircularKernel::ConstructLineArc_2`

`CircularKernel::ConstructCircularArc_2`

`CircularKernel::ComputeCircularX_2`

`CircularKernel::ComputeCircularY_2`

`CircularKernel::ConstructCircularMinVertex_2`

`CircularKernel::ConstructCircularMaxVertex_2`

`CircularKernel::ConstructCircularSourceVertex_2`

`CircularKernel::ConstructCircularTargetVertex_2`

`CircularKernel::ConstructBbox_2`

`CircularKernel::CompareX_2`

`CircularKernel::CompareY_2`

`CircularKernel::CompareXY_2`

`CircularKernel::Equal_2`

`CircularKernel::CompareYatX_2`

`CircularKernel::CompareYtoRight_2`

`CircularKernel::HasOn_2`

`CircularKernel::DoOverlap_2`

`CircularKernel::DoIntersect_2`

`CircularKernel::BoundedSide_2`

`CircularKernel::HasOnBoundedSide_2`

`CircularKernel::HasOnUnboundedSide_2`

`CircularKernel::InXRange_2`

`CircularKernel::IsVertical_2`

`CircularKernel::IsXMonotone_2`

`CircularKernel::IsYMonotone_2`

`CircularKernel::MakeXMonotone_2`

`CircularKernel::MakeXYMonotone_2`

`CircularKernel::Intersect_2`

`CircularKernel::Split_2`

`CircularKernel::GetEquation`

# Geometric Kernels and Classes #

## Kernels ##

- `CGAL::Circular_kernel_2<Kernel,AlgebraicKernelForCircles>`

- `CGAL::Exact_circular_kernel_2`

## Points ##

- `CGAL::Circular_arc_point_2<CircularKernel>`

## Arcs ##

- `CGAL::Circular_arc_2<CircularKernel>`

- `CGAL::Line_arc_2<CircularKernel>`

# Geometric Global Functions #

- `CGAL::compare_x`

- `CGAL::compare_y`

- `CGAL::compare_xy`

- `CGAL::compare_y_at_x`

- `CGAL::compare_y_to_right`

- `CGAL::has_in_x_range`

- `CGAL::has_on`

- `::Kernel::do_intersect "CGAL::do_intersect"`

- `::Kernel::intersection "CGAL::intersection"`

- `CGAL::x_extremal_point`

- `CGAL::y_extremal_point`

- `CGAL::x_extremal_points`

- `CGAL::y_extremal_points`

- `CGAL::make_x_monotone`

- `CGAL::make_xy_monotone`

# Algebraic Concepts #

`AlgebraicKernelForCircles`

## Functors ##


`AlgebraicKernelForCircles::ConstructPolynomial_1_2`

`AlgebraicKernelForCircles::ConstructPolynomialForCircles_2_2`

`AlgebraicKernelForCircles::CompareX`

`AlgebraicKernelForCircles::CompareY`

`AlgebraicKernelForCircles::CompareXY`

`AlgebraicKernelForCircles::SignAt`

`AlgebraicKernelForCircles::XCriticalPoints`

`AlgebraicKernelForCircles::YCriticalPoints`

`AlgebraicKernelForCircles::Solve`

# Algebraic Kernel and Classes #

## Kernel ##

- `CGAL::Algebraic_kernel_for_circles_2_2<RT>`

## Polynomials ##

- `CGAL::Polynomial_1_2<RT>`

- `CGAL::Polynomial_for_circles_2_2<FT>`

## Roots of Polynomials ##

- `CGAL::Sqrt_extension<NT,ROOT>`

- `CGAL::Root_for_circles_2_2<FT>`

- `CGAL::Root_of_traits_2<RT>`
